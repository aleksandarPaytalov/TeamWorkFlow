
@model AllOperatorsQueryModel
@{
    ViewData["Title"] = "Operators list";
}

@{
	var previousPage = Model.CurrentPage - 1;
	if (previousPage < 1)
	{
		previousPage = 1;
	}

	var maxPage = Math.Ceiling((decimal)Model.TotalOperatorsCount / (decimal)Model.OperatorsPerPage);
}

<h2 class="text-center">@ViewBag.Title</h2>

@if (User?.Identity?.IsAuthenticated ?? false)
{
	if (User.IsAdmin())
	{
		<a href="@Url.Action("Add", "Operator")" class="btn btn-success">Add Operator</a>
		<hr/>
	}

	<form method="get">
		<div class="row">
			<div class="form-group col-md-4">
				<div class="form-group">
					<label asp-for="Search"></label>
					<input asp-for="Search" class="form-control" placeholder="Search by operator name or email...">
				</div>
			</div>

			<div class="form-group col-md-4">
				<div class="form-group">
					<label asp-for="Sorting"></label>
					<select asp-for="Sorting" class="form-control" onchange="this.form.submit()">
						<option value="0">Last added operator</option>
						<option value="1">By name ascending</option>
						<option value="2">By name descending</option>
						<option value="3">By email ascending</option>
						<option value="4">By email descending</option>
						<option value="5">By capacity ascending</option>
						<option value="6">By capacity descending</option>
						<option value="7">By status ascending</option>
						<option value="8">By status descending</option>
					</select>
				</div>
			</div>

			<div class="col-md-4">
				<div class="form-group mt-4 p-2">
					<input type="submit" value="Search" class="btn btn-primary" />
					<a asp-action="All" class="btn btn-secondary">Clear</a>
				</div>
			</div>
		</div>
	</form>
	<hr />
	
	<div class="table-responsive">
		<table class="table table-bordered">
			<thead>
			<tr>
				<th>Full Name</th>
				<th>Availability Status</th>
				<th>Email</th>
				<th>Phone number</th>
				<th>Is active</th>
				<th>Capacity</th>
				<th>Action buttons</th>
			</tr>
			</thead>
			<tbody>
			@foreach (var o in Model.Operators)
			{
				<tr>
					<td>@o.FullName</td>
					<td>@o.AvailabilityStatus</td>
					<td>@o.Email</td>
					<td>@o.PhoneNumber</td>
					<td>@o.IsActive</td>
					<td>@o.Capacity</td>
					
					@if (User.IsAdmin())
					{
						<td>
							<a href="@Url.Action("Edit", "Operator", new { id = o.Id, extension = o.GetOperatorExtension()})" class="btn btn-primary">Edit</a>
							<a href="@Url.Action("Delete", "Operator", new { id = o.Id, extension = o.GetOperatorExtension() })" class="btn btn-danger">Delete</a>
							<a href="@Url.Action("Details", "Operator", new { id = o.Id, extension = o.GetOperatorExtension() })" class="btn btn-primary">Details</a>
						</td>
					}
					else if (User.IsOperator())
					{
							<td>
								<a href="@Url.Action("Details", "Operator", new { id = o.Id, extension = o.GetOperatorExtension() })" class="btn btn-primary">Details</a>
							</td>
					}
				</tr>
			}
			</tbody>
		</table>
	</div>

	@if (maxPage > 1)
	{
		<nav aria-label="Page navigation">
			<ul class="pagination justify-content-center">
				@if (Model.CurrentPage > 1)
				{
					<li class="page-item">
						<a class="page-link"
						   asp-action="All"
						   asp-route-currentPage="@(Model.CurrentPage - 1)"
						   asp-route-search="@Model.Search"
						   asp-route-sorting="@Model.Sorting">Previous</a>
					</li>
				}

				@for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min((int)maxPage, Model.CurrentPage + 2); i++)
				{
					<li class="page-item @(i == Model.CurrentPage ? "active" : "")">
						<a class="page-link"
						   asp-action="All"
						   asp-route-currentPage="@i"
						   asp-route-search="@Model.Search"
						   asp-route-sorting="@Model.Sorting">@i</a>
					</li>
				}

				@if (Model.CurrentPage < maxPage)
				{
					<li class="page-item">
						<a class="page-link"
						   asp-action="All"
						   asp-route-currentPage="@(Model.CurrentPage + 1)"
						   asp-route-search="@Model.Search"
						   asp-route-sorting="@Model.Sorting">Next</a>
					</li>
				}
			</ul>
		</nav>
	}

}


@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
