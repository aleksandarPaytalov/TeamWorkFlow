name: TeamWorkFlow CI/CD Pipeline

on:
  push:
    branches: [ "master", "development" ]
  pull_request:
    branches: [ "master", "development" ]

jobs:
  unit-tests:
    name: "Unit Tests"
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET 6.0
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 6.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build solution
      run: dotnet build

    - name: Run Unit Tests
      run: dotnet test UnitTests/UnitTests.csproj --no-build
      env:
        USE_IN_MEMORY_DATABASE: true

  integration-tests:
    name: "Integration Tests (Playwright)"
    runs-on: ubuntu-latest
    needs: unit-tests
    strategy:
      matrix:
        shard: [1, 2, 3, 4, 5, 6, 7, 8] # More shards for better load distribution
      fail-fast: false

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET 6.0
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 6.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build solution
      run: dotnet build

    - name: Install Playwright browsers
      run: |
        dotnet build TeamWorkFlow.PlaywrightTests/TeamWorkFlow.PlaywrightTests.csproj
        pwsh TeamWorkFlow.PlaywrightTests/bin/Debug/net6.0/playwright.ps1 install chromium

    - name: Start ASP.NET Core app in background
      run: |
        dotnet run --project TeamWorkFlow/TeamWorkFlow.csproj --urls "http://localhost:7015" &
        echo "Waiting for app to start..."

        sleep 15
        curl -f http://localhost:7015 || (echo "App failed to start" && exit 1)
      env:
        USE_IN_MEMORY_DATABASE: true

    - name: Run Playwright Integration Tests (Parallel)
      run: |

        echo "ðŸ§ª Running test shard ${{ matrix.shard }} of 5"

        # Better load distribution with 8 shards - each gets ~10-15 tests
        case ${{ matrix.shard }} in
          1)
            FILTER="FullyQualifiedName~ErrorPageTests.Error400|FullyQualifiedName~ErrorPageTests.Error401|FullyQualifiedName~ErrorPageTests.Error403|FullyQualifiedName~RoleRightsMatrixTests.GuestUser"
            ;;
          2)
            FILTER="FullyQualifiedName~ErrorPageTests.Error404|FullyQualifiedName~ErrorPageTests.Error408|FullyQualifiedName~ErrorPageTests.Error429|FullyQualifiedName~RoleRightsMatrixTests.OperatorUser"
            ;;
          3)
            FILTER="FullyQualifiedName~ErrorPageTests.Error500|FullyQualifiedName~ErrorPageTests.Custom|FullyQualifiedName~ErrorPageTests.Direct|FullyQualifiedName~RoleRightsMatrixTests.AdminUser|FullyQualifiedName~RoleRightsMatrixTests.AllUsers|FullyQualifiedName~RoleRightsMatrixTests.UnauthenticatedUser|FullyQualifiedName~SprintToDoTests"
            ;;
          4)
            FILTER="FullyQualifiedName~ErrorScenarioTests"
            ;;
          5)
            FILTER="FullyQualifiedName~AuthenticationUITestsSimple|FullyQualifiedName~NavigationAndUITests.Application|FullyQualifiedName~NavigationAndUITests.Dashboard"
            ;;
          6)
            FILTER="FullyQualifiedName~TaskManagementTests"
            ;;
          7)
            FILTER="FullyQualifiedName~ProjectManagementTests.Create|FullyQualifiedName~ProjectManagementTests.Edit|FullyQualifiedName~ProjectManagementTests.Delete"
            ;;
          8)
            FILTER="FullyQualifiedName~ProjectManagementTests.Search|FullyQualifiedName~ProjectManagementTests.List|FullyQualifiedName~NavigationAndUITests.Navigation|FullyQualifiedName~NavigationAndUITests.Responsive"
            ;;
        esac

        echo "ðŸ“‹ Running tests with filter: $FILTER"

        dotnet test TeamWorkFlow.PlaywrightTests/TeamWorkFlow.PlaywrightTests.csproj \
          --logger "console;verbosity=normal" \
          --settings TeamWorkFlow.PlaywrightTests/runsettings.xml \
          --filter "$FILTER"

      env:
        USE_IN_MEMORY_DATABASE: true
        CI: true
        APP_BASE_URL: http://localhost:7015
