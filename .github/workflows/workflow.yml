name: TeamWorkFlow CI/CD Pipeline

on:
  push:
    branches: [ "master", "development" ]
  pull_request:
    branches: [ "master", "development" ]

jobs:
  unit-tests:
    name: "Unit Tests"
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET 6.0
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 6.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build solution
      run: dotnet build --no-restore --configuration Release

    - name: Run Unit Tests
      run: dotnet test UnitTests/UnitTests.csproj --no-build --configuration Release --verbosity normal --logger trx --results-directory TestResults
      env:
        USE_IN_MEMORY_DATABASE: true

    - name: Upload Unit Test Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: unit-test-results
        path: TestResults/*.trx
        retention-days: 30

  integration-tests:
    name: "Integration Tests (Playwright)"
    runs-on: ubuntu-latest
    needs: unit-tests
    if: success()

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET 6.0
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 6.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build solution
      run: dotnet build --no-restore --configuration Release

    - name: Install Playwright browsers
      run: |
        dotnet tool install --global Microsoft.Playwright.CLI
        playwright install chromium
        playwright install-deps chromium

    - name: Start TeamWorkFlow application
      run: |
        cd TeamWorkFlow
        dotnet run --configuration Release --no-build &
        echo "APP_PID=$!" >> $GITHUB_ENV
        sleep 30
      env:
        ASPNETCORE_ENVIRONMENT: Development
        USE_IN_MEMORY_DATABASE: true

    - name: Wait for application to be ready
      run: |
        timeout 60 bash -c 'until curl -f -s https://localhost:7015 -k; do sleep 2; done' || (echo "Application failed to start" && exit 1)

    - name: Run Playwright Integration Tests
      run: dotnet test TeamWorkFlow.PlaywrightTests/TeamWorkFlow.PlaywrightTests.csproj --no-build --configuration Release --verbosity normal --logger trx --results-directory TestResults
      env:
        USE_IN_MEMORY_DATABASE: true
        PLAYWRIGHT_BROWSERS_PATH: ${{ github.workspace }}/ms-playwright

    - name: Stop application
      if: always()
      run: |
        if [ ! -z "$APP_PID" ]; then
          kill $APP_PID || true
        fi

  pipeline-summary:
    name: "Pipeline Summary"
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests]
    if: always()

    steps:
    - name: Pipeline Results Summary
      run: |
        echo "## TeamWorkFlow CI/CD Pipeline Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Job | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|-----|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| Unit Tests | ${{ needs.unit-tests.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Integration Tests | ${{ needs.integration-tests.result == 'success' && '✅ Passed' || needs.integration-tests.result == 'skipped' && '⏭️ Skipped' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

        if [[ "${{ needs.unit-tests.result }}" == "success" && "${{ needs.integration-tests.result }}" == "success" ]]; then
          echo "🎉 **All tests passed!** The application is ready for deployment." >> $GITHUB_STEP_SUMMARY
          exit 0
        elif [[ "${{ needs.unit-tests.result }}" != "success" ]]; then
          echo "❌ **Unit tests failed.** Integration tests were skipped." >> $GITHUB_STEP_SUMMARY
          exit 1
        else
          echo "❌ **Integration tests failed.** Please check the test results." >> $GITHUB_STEP_SUMMARY
          exit 1
        fi
